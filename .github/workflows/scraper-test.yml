name: Scraper Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: "0 0 * * 1"

permissions:
  contents: read

jobs:
  prep-testbed:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    
    steps:
    - uses: actions/checkout@v4
    
    - id: set-matrix
      run: |
        # Get all test paths and convert to JSON array
        echo "::set-output name=matrix::$(find tests/ -type d -not -path '*/\.*' | jq -R . | jq -cs .)"

  test:
    needs: prep-testbed
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false  # Continue running other tests even if one fails
      matrix:
        python-version: ["3.12", "3.13"]
        test-path: ${{fromJson(needs.prep-testbed.outputs.matrix)}}

    steps:
    - uses: actions/checkout@v4

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test with pytest
      env:
        USER_AGENT: ${{ secrets.USER_AGENT }}
        X_BOOKING_CONTEXT_ACTION_NAME: ${{ secrets.X_BOOKING_CONTEXT_ACTION_NAME }}
        X_BOOKING_CONTEXT_AID: ${{ secrets.X_BOOKING_CONTEXT_AID }}
        X_BOOKING_CSRF_TOKEN: ${{ secrets.X_BOOKING_CSRF_TOKEN }}
        X_BOOKING_ET_SERIALIZED_STATE: ${{ secrets.X_BOOKING_ET_SERIALIZED_STATE }}
        X_BOOKING_PAGEVIEW_ID: ${{ secrets.X_BOOKING_PAGEVIEW_ID }}
        X_BOOKING_SITE_TYPE_ID: ${{ secrets.X_BOOKING_SITE_TYPE_ID }}
        X_BOOKING_TOPIC: ${{ secrets.X_BOOKING_TOPIC }}
      run: |
        python -m pytest ${{ matrix.test-path }}